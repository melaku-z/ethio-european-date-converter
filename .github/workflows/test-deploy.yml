name: build and test

on:
  push:
    branches: [main, master]
    tags:
      - 'v*.*.*'
  pull_request:
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: pages-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest

    # Sets permissions of the GITHUB_TOKEN to allow release
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup cache for Chromium binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/puppeteer
          key: ${{ runner.os }}-pnpm-chromium-${{ hashFiles('pnpm-lock.yaml') }}

      - name: pnpm install
        run: pnpm install
        env:
          CI: true

      - name: lint
        run: pnpm lint && pnpm format

      - name: build
        run: pnpm build

      - name: test
        run: pnpm test
        env:
          CI: true

      - name: Archive test results
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: lh-test-report.html
          path: tests/lhreport.html

      - name: Install Playwright Browsers
        run: pnpm run test:playwright:install

      - name: Run Playwright tests
        run: pnpm run test:e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - run: pnpm run sync:android && pnpm run update:android
        working-directory: ./mobile

      # Pull the latest image to build, and avoid caching pull-only images.
      # (docker pull is faster than caching in most cases.)
      - run: docker-compose pull
        working-directory: ./mobile
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Build Android
        run: docker-compose up
        working-directory: ./mobile

      - uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: mobile/android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
          name: app-release-unsigned.apk
          path: mobile/android/app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 2
          if-no-files-found: error

      - name: Zip releases 1
        run: zip -r ../web-app.zip .
        working-directory: ./dist
        if: startsWith(github.ref, 'refs/tags/')
      - name: Zip releases 2
        run: zip -r ../../../ethiopian-calendar-date-converter.zip .
        working-directory: ./packages/ethiopian-calendar-date-converter/dist
        if: startsWith(github.ref, 'refs/tags/')

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ethiopian-calendar-date-converter.zip
            web-app.zip
            mobile/android/app/build/outputs/apk/debug/app-debug.apk

  # Deployment job for github pages
  deploy-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/master'

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
      actions: read # to download an artifact uploaded by `actions/upload-pages-artifact@v3`

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: pnpm install
        run: pnpm install
        env:
          CI: true

      - name: build
        run: pnpm build
        env:
          BASE_URL: /ethio-european-date-converter/
      - name: Upload artifact # for github pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
